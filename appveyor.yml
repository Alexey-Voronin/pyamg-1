clone_depth: 1

branches:
  only:
  - master
  - windows-alloc-bug

os:
  - Visual Studio 2017

environment:
  global:
    # for pypi
    TWINE_USERNAME:
        secure: tLofMqeH2HanaUxSAhgB7w==
    TWINE_PASSWORD:
        secure: KZ/QlnFM6G2pPgsK7Wv15w==
    PY_MAJOR_VER: 3

  matrix:
    - PYTHON: "C:\\Python35"
      PYTHON_ARCH: "x86"
    - PYTHON: "C:\\Python36"
      PYTHON_ARCH: "x86"
    - PYTHON: "C:\\Python37"
      PYTHON_ARCH: "x86"
    - PYTHON: "C:\\Python38"
      PYTHON_ARCH: "x86"
    - PYTHON: "C:\\Python35-x64"
      PYTHON_ARCH: "x86_64"
    - PYTHON: "C:\\Python36-x64"
      PYTHON_ARCH: "x86_64"
    - PYTHON: "C:\\Python37-x64"
      PYTHON_ARCH: "x86_64"
    - PYTHON: "C:\\Python38-x64"
      PYTHON_ARCH: "x86_64"

install:
# If there's a newer build queued for the same PR, cancel this one
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }
  - ps: Start-FileDownload "https://repo.continuum.io/miniconda/Miniconda$env:PY_MAJOR_VER-latest-Windows-$env:PYTHON_ARCH.exe" C:\Miniconda.exe; echo "Finished downloading miniconda"
  - cmd: C:\Miniconda.exe /S /D=C:\Py
  - SET PATH=C:\Py;C:\Py\Scripts;C:\Py\Library\bin;%PATH%
  - conda config --set always_yes yes
  - conda update conda
  - conda install cython numpy scipy wheel pip
  - conda install -c conda-forge pybind11
  - ps: "python --version"
  - python -m pip install cibuildwheel==1.6.3
  - python -m cibuildwheel --output-dir wheelhouse
  - ps: "ls wheelhouse"

build: false

artifacts:
  - path: wheelhouse\*

on_success:
  - IF "%APPVEYOR_REPO_TAG%" == "false"
    (
    echo "false"
    )
  - IF "%APPVEYOR_REPO_TAG%" == "true"
    (
    echo "true"
    )
  #   (
  #   python -m pip install twine
  #   &&
  #   python -m twine upload wheelhouse/*.whl
  #   )
  #- twine upload -u %USER% -p %PASS% dist/*
  # - >
  #   IF "%APPVEYOR_REPO_TAG%" == "true"
  #   (
  #   python -m pip install twine
  #   &&
  #   python -m twine upload wheelhouse/*.whl
  #   )
